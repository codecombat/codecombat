extends /templates/base-flat.jade

block content
  .container
    #main-content(dir="auto")
      .main-content-preload-backdrop
      if me.isAnonymous()
        +anonymous-welcome-message()
      else
        .student-profile-area
          .row
            .current-hero.col-md-2.text-center
              h2
                if view.hero.getHeroShortName()
                  span.spr Hero:
                  span= view.hero.getHeroShortName()
              hr

              .hero-avatar
                if view.hero.get('poseImage')
                  img(src='/file/' + view.hero.get('poseImage') class='hero-' + view.hero.get('slug'))
              if view.hero.get('name')
                h2.current-hero-text
                  // TODO: i18n, maybe remove 'the' when not in English
                  span.current-hero-name= 'The ' + view.hero.get('name')
              .rtl-allowed
                a.change-hero-btn(data-i18n="play.change_hero")

            div(class='student-stats col-md-5' + (view.shouldEmphasizeAILeague() ? '' : ' deemphasize-ai-league'))
              h2
                span.spr Player:
                span= me.broadName()
              hr

              a.play-next-level-btn.tile(disabled=!view.nextLevelInfo || view.nextLevelInfo.locked, title="TODO: play next level, or ask teacher to unlock if locked")
                // TODO: handle being in no courses and playing free course (start/middle/end)
                - var levelInfo = view.nextLevelInfo || {}
                - var level = levelInfo.level
                - var levelName = level ? i18n(level.attributes, 'name') : ''
                - if (levelInfo.number && levelInfo.number > 0)
                -   // Prepend level number, like "Level 1: Dungeons of Kithgard"
                -   levelName = $.i18n.t('play_level.level') + ' ' + levelInfo.number + ': ' + levelName
                - else if (levelInfo.number)
                -   // Prepend level type and name, like "Concept Challenge: Long Steps"
                -   levelName = levelInfo.number + ': ' + levelName
                - if (levelInfo.courseAcronym)
                -   // Prepend course acronym, like "CS1 Level 1: Dungeons of Kithgard"
                -   levelName = levelInfo.courseAcronym + ' ' + levelName
                - var levelImage = view.nextLevelImage()
                img(src=levelImage, alt=levelName, class="level-image" + (levelImage ? "" : " placeholder"))
                // TODO: disabled case
                h3.dynamic-level-name.overlay-text= levelName + (levelInfo.locked ? " (locked)" : "")
                .tile-text-backdrop
                .stats-text-container
                  .overlay-text.stats-text
                    // TODO: do a single i18n key with the levels completed interpolated, handle 0 and 1 levels case
                    span.spr Levels Completed:
                    span= me.get('stats').gamesCompleted
                .play-text-container
                  .overlay-text.play-text
                    if levelInfo.locked
                      span Ask Teacher To Unlock
                    else
                      span Play Next Level

              for arena in view.activeArenas || []
                a.play-arena-btn.tile(href="/play/ladder/#{arena.slug}", title="TODO: Play Arena/Tournament")
                  - var arenaImage = arena.image || "/images/pages/play/ladder/multiplayer_notext.jpg"
                  - var arenaName = $.i18n.t('league.' + arena.slug.replace(/-/g, '_'))
                  - var stats = view.getAILeagueStat('arenas', arena.levelOriginal, '_global')
                  // TODO: link to team-specific arena by default if there are enough arena players in a team?
                  img(src=arenaImage, alt=arenaName, class="level-image" + (arena.image ? "" : " placeholder"))
                  if !arena.image || !view.shouldEmphasizeAILeague()
                    // TODO: figure out when we are showing internationalized/placeholder arena image
                    h3.dynamic-level-name.overlay-text= arenaName
                  .tile-text-backdrop
                  .stats-text-container
                    .overlay-text.stats-text
                      if stats && stats.score
                        if stats.rank
                          span.spr  Rank:
                          span #
                          span= stats.rank.toLocaleString()
                          if stats.playerCount
                            span= ' / '
                            span= stats.playerCount.toLocaleString()
                      else if view.myArenaSessions
                        span Not Started
                  .play-text-container
                    .overlay-text.play-text
                      //.btn.btn-illustrated.btn-success
                      if arena.ended
                        span View Winners
                      else if arena.type == 'championship'
                        span Play Tournament
                      else
                        span Play Arena

              a.ai-league-btn.tile(href=me.isRegisteredForAILeague() ? "/league" : "/league?registering=true", title="TODO: AI League")
                img.level-image(src="/images/pages/courses/banners/ai-league-banner-#{view.randomAILeagueBannerHero}.png" alt="CodeCombat AI League")
                //h3.dynamic-level-name.overlay-text CodeCombat AI League
                .tile-text-backdrop
                .stats-text-container
                  .overlay-text.stats-text
                    if me.isRegisteredForAILeague()
                      span.spr Age Bracket:
                      span= view.ageBracketDisplay
                    else
                      span Unregistered
                .play-text-container
                  .overlay-text.play-text
                    if me.isRegisteredForAILeague()
                      span View Standings
                    else
                      span Register

            .school-stats.col-md-5
              if view.myClans
                h2
                  span AI League Team Rankings
                  if me.get('stats') && me.get('stats').codePoints
                    span= ': ' + me.get('stats').codePoints.toLocaleString() + ' CodePoints'
                hr

                for clan in ['_global'].concat(view.myClans)
                  - var stats = view.getAILeagueStat('codePoints', clan == '_global' ? clan : clan._id)
                  if stats && stats.playerCount > 1
                    a.team(href="/league/#{clan == '_global' ? '' : clan.slug + '#team-info'}")
                      .team-name= clan == '_global' ? 'Worldwide' : clan.displayName || clan.name
                      .team-stats
                        if stats.rank
                          span #
                          span= stats.rank.toLocaleString()
                          span= ' / '
                        span= stats.playerCount.toLocaleString()
                        span  players

        .student-profile-area.v0
          .row
            .current-hero.col-md-2.text-center
              .hero-avatar
                if view.hero.get('poseImage')
                  img(src='/file/' + view.hero.get('poseImage') class='hero-' + view.hero.get('slug'))
              .current-hero-right-col.rtl-allowed
                .semibold.current-hero-text
                  span.current-hero-name= view.hero.getHeroShortName()
                a.change-hero-btn
                  |  (
                  span(data-i18n="play.change_hero")
                  | )
            .student-stats.col-md-5.v0
              h2= me.broadName()
              if me.get('stats') && me.get('stats').gamesCompleted
                .stat
                  span.spr Levels:
                  span= me.get('stats').gamesCompleted
                  if view.nextLevelInfo
                    a.play-next-level-btn play next level
              else if view.nextLevelInfo
                a.play-next-level-btn play next level
              .stat
                if me.isRegisteredForAILeague()
                  span.spr AI League:
                  span= view.ageBracketDisplay
                  span.spr  Bracket
                  a(href="/league?registering=true") change
                else
                  span.spr AI League: unregistered
                  a(href="/league?registering=true") register
              if me.get('stats') && me.get('stats').codePoints
                .stat
                  span.spr CodePoints:
                  span.spr= me.get('stats').codePoints
              for arena in view.activeArenas || []
                .stat
                  span= $.i18n.t('league.' + arena.slug.replace(/-/g, '_'))
                  span= ': '
                  - var stats = view.getAILeagueStat('arenas', arena.levelOriginal, '_global')
                  if stats && stats.score
                    span= Math.round(100 * stats.score).toLocaleString()
                    if stats.rank
                      |  (
                      span #
                      span= stats.rank.toLocaleString()
                      if stats.playerCount
                        span= ' / '
                        span= stats.playerCount.toLocaleString()
                      | )
                  else if view.myArenaSessions
                    span not started
                  else
                    span ...
                  a(href="/play/ladder/#{arena.slug}")
                    if arena.type == 'championship'
                      span play tournament
                    else
                      span play arena

            .school-stats.col-md-5
              if view.myClans
                h2 AI League Teams
                for clan in ['_global'].concat(view.myClans)
                  - var stats = view.getAILeagueStat('codePoints', clan == '_global' ? clan : clan._id)
                  if stats && stats.playerCount > 1
                    .team
                      a(href="/league/#{clan == '_global' ? '' : clan.slug + '#team-info'}")
                        span.spr= clan == '_global' ? 'Worldwide' : clan.displayName || clan.name
                      if stats.rank
                        span #
                        span= stats.rank.toLocaleString()
                        span= ' / '
                      span= stats.playerCount.toLocaleString()
                      span  players

        .text-center.row#tournament-btn
          // TODO: move this into a tile
          if view.hasActiveTournaments
            a.btn.btn-navy.btn-lg.text-uppercase(href='/tournaments/student/#{me.id}', data-i18n="tournament.class_tournaments") class mini-tournaments
        if view.classrooms.size()
          .classes-area
            br
            h3(data-i18n="courses.my_classes")

            if view.allCompleted
              p.alert.alert-success
                span(data-i18n="courses.ask_next_course")

            for classroom in view.classrooms.models
              hr.class-break
              - var justAdded = classroom.id === view.classroomJustAdded;
              - var classroomClass = 'classroom' + (justAdded ? ' just-added' : '')
              div(class=classroomClass).rtl-allowed
                if justAdded
                  #just-added-text.text-center(data-i18n="courses.class_added")
                h5(dir="auto")
                  span.spr= classroom.get('name')
                  - var languageMap = {javascript: 'JavaScript', python: 'Python', cpp: 'C++'}
                  span.spr (#{languageMap[(classroom.get('aceConfig') || {}).language]})
                p
                  span(data-i18n="courses.teacher")
                  span :
                  if view.ownerNameMap && view.ownerNameMap[classroom.get('ownerID')]
                    span.spl= view.ownerNameMap[classroom.get('ownerID')]

                - var courseInstances = view.courseInstances.where({classroomID: classroom.id});
                for courseInstance in courseInstances

                  .course-instance-entry.rtl-allowed
                    - var course = view.store.state.courses.byId[courseInstance.get('courseID')];
                    if course
                      h6
                        span.spr= i18n(course, 'name')
                        small
                          a.view-levels-btn(data-course-id=courseInstance.get('courseID'), data-courseinstance-id=courseInstance.id, data-i18n="courses.view_map")
                          if view.courseInstanceHasProject(courseInstance)
                            a.view-project-gallery-link(data-course-id=courseInstance.get('courseID'), data-courseinstance-id=courseInstance.id, data-i18n="courses.view_project_gallery")
                          if classroom.hasAssessments({courseId: course._id})
                            =" "
                            a.view-challenges-link(data-classroom-id=classroom.id, data-i18n="courses.view_challenges", data-course-id=course._id)
                          if view.showVideosLinkForCourse(course._id)
                            = " "
                            a.view-videos-link(data-classroom-id=classroom.id, data-i18n="courses.view_videos", data-course-id=course._id, data-course-name=i18n(course, 'name'))
                      +course-instance-body(courseInstance, classroom)
                      .clearfix

        else
          #announcement
            h5 You can still learn and play without a classroom!
            ul
              li
                b Start by playing the free Hour of Code campaign by <a href='/play/intro'>clicking here</a>.

        hr.class-break
        h3(data-i18n="courses.join_class")
        hr.class-break

        form#join-class-form.form-inline
          .help-block
            em(data-i18n="courses.ask_teacher_for_code")
          .form-group
            input#class-code-input.form-control(data-i18n="[placeholder]courses.enter_c_code", placeholder="<Enter Class Code>", value=view.classCode)
          input#join-class-button.btn.btn-navy(type="submit", data-i18n="[value]courses.join", value="Join")

          if view.state === 'enrolling'
            .progress.progress-striped.active
              .progress-bar(style="width: 100%", data-i18n="courses.joining") Joining class

          if view.errorMessage
            .alert.alert-danger= view.errorMessage


mixin course-instance-body(courseInstance, classroom)
  - var course = view.store.state.courses.byId[courseInstance.get('courseID')];
  - var stats = classroom.statsForSessions(courseInstance.sessions, course._id);
  - var nextLevel = stats.levels.next;

  if stats.courseComplete
    .text-success
      span.glyphicon.glyphicon-ok
      span.spl(data-i18n="courses.course_complete")
      span !
  .pull-right
    if stats.courseComplete
      - var arenaLevel = stats.levels.arena;
      - var projectLevel = stats.levels.project;
      if arenaLevel
        - var url = view.urls.courseArenaLadder({level: view.originalLevelMap[arenaLevel.get('original')] || arenaLevel, courseInstance: courseInstance});
        a.play-btn.btn.btn-forest-alt.btn-lg.m-b-1(data-href=url, data-level-slug=arenaLevel.get('slug'), data-event-action="Students Play Arena")
          span(data-i18n="courses.play_arena")
      else if projectLevel
        - var url = view.urls.courseLevel({level: view.originalLevelMap[projectLevel.get('original')] || projectLevel, courseInstance: courseInstance});
        a.play-btn.btn.btn-forest-alt.btn-lg.m-b-1(data-href=url, data-level-slug=projectLevel.get('slug'), data-event-action="Students Play Project")
          span(data-i18n="courses.view_project")
      else
        a.btn.btn-default.btn-lg.m-b-1(disabled=true, data-i18n="courses.course_complete")
    else if nextLevel
      - var url = view.urls.courseWorldMap({course: course, courseInstance: courseInstance});
      if nextLevel != stats.levels.first
        a.play-btn.btn.btn-forest.btn-lg.m-b-1(data-href=url, data-level-slug=nextLevel.get('slug'), data-event-action="Students Continue Course")
          span(data-i18n="common.continue")
      else
        a.play-btn.btn.btn-navy.btn-lg.m-b-1(data-href=url, data-level-slug=nextLevel.get('slug'), data-event-action="Students Start Course")
          span(data-i18n="courses.start")

  if stats.courseComplete
    a.certificate-link(target='_blank', href='/certificates/' + me.id + '?class=' + classroom.id + '&course=' + course._id + '&course-instance=' + courseInstance.id)
      img(src='/images/pages/user/certificates/certificate-icon.png')
      div(data-i18n='user.certificate_view')
  else if stats.levels.lastPlayed
    div
      span(data-i18n="courses.last_level")
      span :
      if stats.levels.lastPlayedNumber
        span.spl #{stats.levels.lastPlayedNumber}.
      - var levelNameEnglish = stats.levels.lastPlayed.get('name');
      - var levelWithI18N = view.originalLevelMap[stats.levels.lastPlayed.get('original')];
      - var levelName = levelWithI18N ? i18n(levelWithI18N.attributes, 'name') : levelNameEnglish;
      span.spl= levelName || levelNameEnglish

  .clearfix
  if stats.courseComplete
    br
  else
    .progress
      .progress-bar(style="width:"+stats.levels.pctDone)= stats.levels.pctDone


mixin anonymous-welcome-message()
  // This shows when user has no account and arrives via ?_cc=SomeClassCode
  // Normally it's behind a modal, but they can close the modal and get it back

  .anonymous-welcome-message
    h1.text-center(data-i18n="courses.welcome_to_courses")
  
    .text-center
      p
        h2(data-i18n="courses.ready_to_play")
      p
        button#start-new-game-btn.btn.btn-navy.btn-lg(data-i18n="courses.start_new_game")
      p
        span.spr -
        span.text-uppercase(data-i18n="general.or")
        span.spl -
      p
        button#log-in-btn.btn.btn-forest.btn-lg(data-i18n="login.log_in")
  
    h2#play-now-to-learn-header.text-center.text-uppercase(data-i18n="courses.play_now_learn_header")
    ul#benefits-ul
      li(data-i18n="courses.play_now_learn_1")
      li(data-i18n="courses.play_now_learn_2")
      li(data-i18n="courses.play_now_learn_3")
      li(data-i18n="courses.play_now_learn_4")
