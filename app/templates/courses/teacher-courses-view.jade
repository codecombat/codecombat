extends /templates/base-flat

block page_nav
  include ./teacher-dashboard-nav.jade

block content
  if me.isAnonymous()
    .access-restricted.container.text-center
      h5(data-i18n='teacher.access_restricted')
      p(data-i18n='teacher.teacher_account_required')
      .login-button.btn.btn-lg.btn-primary(data-i18n='login.log_in')
      .teacher-signup-button.btn.btn-lg.btn-primary-alt(data-i18n='teacher.create_teacher_account')

  .container
    h1(data-i18n="courses.title")
    h2(data-i18n="courses.subtitle")
  
  .courses.container
    - var courses = view.courses.models;
    - var i = 0;
    while i < courses.length
      - var course = courses[i];
      - i++;
      .course.row
        .col-sm-9
          +course-info(course)
        .col-sm-3.hidden
          .play-level-form
            .form-group
              label.control-label
                span(data-i18n="courses.select_language")
                | :
                select.form-control
                  // TODO: Automate this list @scott
                  option(value="python")
                    | Python
                  option(value="javascript")
                    | JavaScript
                  //- option(value="coffeescript")
                  //-   | CoffeeScript (Experimental)
                  //- option(value="clojure")
                  //-   | Clojure (Experimental)
                  //- option(value="lua")
                  //-   | Lua
                  //- option(value="java")
                  //-   | Java
            .form-group
              label.control-label
                span(data-i18n="courses.select_level")
                | :
                select.form-control
                  // TODO: Automate this list @scott
                  option(value='TODO')
                    | 1. Dungeons of Kithgard
            a.btn.btn-lg.btn-primary
              span(data-i18n="courses.play_level")
          .clearfix
      
            
            
mixin course-info(course)
  .course-info
    .text-h4.semibold
      = course.get('name')
    p= course.get('description')
    p.concepts.semibold
      span(data-i18n="courses.concepts_covered")
      | : 
      each concept in course.get('concepts')
        span(data-i18n="concepts." + concept)
        if course.get('concepts').indexOf(concept) !== course.get('concepts').length - 1
          span.spr ,
    if view.guideLinks[course.id]
      //- a.btn.btn-primary(href=view.guideLinks[course.id] class=(me.isAnonymous() ? 'disabled' : ''))
      //-   span(data-i18n="courses.print_guide")
      a.btn.btn-primary(href=view.guideLinks[course.id] class=(me.isAnonymous() ? 'disabled' : ''))
        span(data-i18n="courses.view_guide_online")
    else
      i.small
        | (
        span(data-i18n='teacher.guides_coming_soon')
        | )
