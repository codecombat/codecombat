extends /templates/base-flat.jade

block page_nav
  include ./teacher-dashboard-nav

block content
  if (!me.isTeacher() && !me.isAdmin() && !view.classrooms.size()) || me.isAnonymous()
    .access-restricted.container.text-center.m-y-3
      h5(data-i18n='teacher.access_restricted')
      p(data-i18n='teacher.teacher_account_required')
      if me.isAnonymous()
        .login-button.btn.btn-lg.btn-primary(data-i18n='login.log_in')
        button.btn.btn-lg.btn-primary-alt.create-teacher-btn(data-event-action="Teachers Classes Create Teacher Account", data-i18n='teacher.create_teacher_account')
      else
        button.btn.btn-lg.btn-primary.update-teacher-btn(data-event-action="Teachers Classes Convert Teacher Account", data-i18n="teachers_quote.convert_account_title")
        button#logout-button.btn.btn-lg.btn-primary-alt(data-i18n="login.log_out")

    .container
      .teacher-account-blurb.text-center.col-xs-6.col-xs-offset-3.m-y-3
        h5(data-i18n='teacher.what_is_a_teacher_account')
        p(data-i18n='teacher.teacher_account_explanation')

  else
    if !me.isTeacher() && !me.isAdmin()
      .alert.alert-danger.text-center
        .container
          //- DNT: Temporary
          h3 ATTENTION: Please upgrade your account to a Teacher Account.
          p
            | We are transitioning to a new improved classroom management system for instructors.
            | Please convert your account to ensure you retain access to your classrooms.
          button.btn.btn-primary.btn-lg.update-teacher-btn(data-event-action="Teachers Classes Convert Teacher Account Temp") Upgrade to teacher account

    - var officeHours = view.upcomingOfficeHours;
    - var limit = view.howManyOfficeHours == 'all' ? Infinity : 2;
    - var limited = officeHours.length > 2;
    #office-hours
      if officeHours.length && view.howManyOfficeHours != 'none'
        .update-class.rtl-allowed
          button.close.see-no-office-hours(data-dismiss="alert" aria-label="Close")
            span(aria-hidden=true) &times;
          .alert.alert-info.text-center.rtl-allowed
            strong(data-i18n='teacher.office_hours')
            .small-details.rtl-allowed
              span.spr(data-i18n='teacher.office_hours_detail')
              a(data-i18n="teacher.office_hours_link" href="https://blog.codecombat.com/live-events/")
              span.spl(data-i18n="teacher.office_hours_detail_2")
            ul.list-group
              for oh in officeHours.slice(0, limit)
                li.list-group-item
                  span.spr #{moment(oh.time).calendar(null, {sameElse: 'ddd MMM D, LT'})}:
                  a(href=oh.link target="_blank")= oh.name
                  span.spl.spr(data-i18n="general.with")
                  span #{oh.host} (#{moment(oh.time).fromNow()})
            if view.howManyOfficeHours == 'all' && limited
              a.see-less-office-hours.btn.btn-small.btn-primary.pull-right(data-i18n="general.fewer") Fewer
            else if view.howManyOfficeHours == 'some' && limited
              a.see-all-office-hours.btn.btn-primary.btn-small.pull-right(data-i18n="general.more") More

    if !me.hideOtherProductCTAs()
      .banner-webinar

    .container
      +teacher-quests

    .container
      div#classes-nag-subview

      h3(data-i18n='teacher.current_classes')

    .classes.container
      // Loop each class
      each classroom in view.classrooms.models
        unless classroom.get('archived')
          +classRow(classroom)

    if view.administratingTeachers && view.administratingTeachers.size() > 0
      .container
        .school-admin-notification
          span(data-i18n='school_administrator.notice')
          | &nbsp;
          span
            each teacher, index in view.administratingTeachers.models
              = teacher.get('firstName')
              | &nbsp;
              = teacher.get('lastName')
              | &nbsp;
              | (
              a(href="mailto:#{teacher.get('email')}")
                = teacher.get('email')
              | )
              if index !== view.administratingTeachers.models.length - 1
                | ,&nbsp;


    +createClassButton

    .ai-league-stats
      - var stats = JSON.parse(view.aiLeagueStats || '""')
      //pre= view.aiLeagueStats
      if stats && stats.totalPlayers > 1
        .container
          .row
            .col-xs-12
              h3
                span(data-i18n='courses.ai_league_team_rankings')
                if stats.totalPlayers
                  span= ' (' + stats.totalPlayers.toLocaleString() + ' ' + $.i18n.t('play.players') + ')'
                span= ' '
                a.view-ai-league.text-h6(data-i18n='teacher.view_ai_league_team' data-clan-level='teacher' data-clan-source-object-id=me.id data-event-action="Teachers Classes View AI League Team")
                span= ' '
                a.ai-league-quickstart-video.text-h6(data-i18n='league.quickstart_video' data-event-action="Teachers Classes View AI League Quickstart video")
          .row
            if stats.arenas && _.some(stats.arenas, ageStat => _.some(ageStat, stat => stat.clanPlayers > 1 || (stat.topPlayer && stat.topPlayer.percentileRank < 0.2)))
              .col-md-7.stats-col
                h4 Arena Rankings
                span.small Global AI League arena rankings
                each ageStat, arenaSlug in stats.arenas
                    //h5= $.i18n.t('league.' + arenaSlug.replace(/-/g, '_'))
                    each stat, age in ageStat
                      if stat.clanPlayers > 1 || (stat.topPlayer && stat.topPlayer.percentileRank < 0.2)
                        h5
                          a(href='/play/ladder/' + arenaSlug + '/clan/' + view.teacherClan._id)
                            span= $.i18n.t('league.' + arenaSlug.replace(/-/g, '_'))
                          span= ' - ' + $.i18n.t('ladder.bracket_' + age.replace(/-/g, '_'))
                        //h6= $.i18n.t('ladder.age_bracket') + ': ' + $.i18n.t('ladder.bracket_' + age.replace(/-/g, '_'))
                        .stat
                          //span(data-i18n='anonymous_teacher.students_section')
                          span Competing:
                          strong= ' ' + stat.clanPlayers.toLocaleString() + (stat.clanPlayers == 1 ? ' student' : ' students')
                        if stat.topPlayer
                          .stat
                            span Top:
                            - var percentile = stat.topPlayer.percentileRank * 100;
                            - if      (percentile < .1) percentile = percentile.toFixed(2);
                            - else if (percentile <  1) percentile = percentile.toFixed(1);
                            - else if (percentile < 10) percentile = percentile.toFixed(0);
                            - else if (percentile < 25) percentile = (Math.ceil(percentile / 5) * 5).toFixed(0);
                            - else if (percentile < 50) percentile = (Math.ceil(percentile / 10) * 10).toFixed(0);
                            - else                      percentile = null;
                            strong= ' ' + stat.topPlayer.name
                            span.stat-details
                              span= ' (#' + stat.topPlayer.globalRank.toLocaleString() + ' of ' + stat.totalPlayers.toLocaleString() + ' players'
                              if percentile
                                span= ' - top ' + percentile + '%)'
                              else
                                span= ')'

            .col-md-5.stats-col
              if stats.wins && (stats.wins.over100 || stats.wins.over50)
                h4 Arena Victories
                span.small Global AI League arena recent wins
                if stats.wins.over100 > 1 || stats.wins.over50 > 1
                  .stat
                    if stats.wins.over100 && stats.wins.over100 > stats.wins.over50 - 2 && stats.wins.over100 > 1
                      span 100+ wins:
                      strong= ' ' + stats.wins.over100 + ' students'
                    else if stats.wins.over50 > 1
                      span 50+ wins:
                      strong= ' ' + stats.wins.over50 + ' students'
                if stats.wins.topPlayer && stats.wins.topPlayer.name
                  .stat
                    span Top:
                    strong= ' ' + stats.wins.topPlayer.name
                    span.stat-details= ' (' + stats.wins.topPlayer.wins + ' wins)'

              if stats.codePoints && stats.codePoints.total
                h4 CodePoints
                span.small 1 CodePoint = 1 significant line of code
                .stat
                  span Total:
                  strong= ' ' + stats.codePoints.total.toLocaleString() + ' CodePoints'
                if stats.codePoints.over100 > 1
                  .stat
                    span 100+ CodePoints:
                    strong= ' ' + stats.codePoints.over100.toLocaleString() + ' students'
                if stats.codePoints.topPlayer && stats.codePoints.topPlayer.name
                  .stat
                    span Top:
                    strong= ' ' + stats.codePoints.topPlayer.name
                    span.stat-details= ' (' + stats.codePoints.topPlayer.codePoints.toLocaleString() + ' CodePoints)'


    if !me.hideOtherProductCTAs()
      .container.try-ozaria
        a(data-i18n="teacher.try_ozaria_footer")

  - var archivedClassrooms = view.classrooms.where({archived: true});
  if _.size(archivedClassrooms)
    .container
      h3(data-i18n='teacher.archived_classes')
      p(data-i18n='teacher.archived_classes_blurb')

    .classes.container
      each classroom in archivedClassrooms
        +archivedClassRow(classroom)

mixin classRow(classroom)
  .class.row.rtl-allowed(dir="auto")
    .class-details-col.rtl-allowed(dir="auto")
      .text-h4.semibold.rtl-allowed(dir="auto")
        = classroom.get('name')
      .language.small.rtl-allowed(dir="auto")
        span(data-i18n='teacher.language')
        | :&nbsp;
        span.language-name
          = classroom.capitalLanguage
      | &nbsp;
      .student-count.small.rtl-allowed(dir="auto")
        span(data-i18n='courses.students')
        | :&nbsp;
        span
          = classroom.get('members').length
      .class-links.rtl-allowed(dir="auto")
        a.view-class-btn.text-h6(data-i18n='teacher.view_class' data-classroom-id=classroom.id data-event-action="Teachers Classes View Class Link")
        a.view-ai-league.text-h6(data-i18n='teacher.view_ai_league_team' data-clan-level='classroom' data-clan-source-object-id=classroom.id data-event-action="Teachers Classes View AI League Team")
        a.edit-classroom.text-h6(data-i18n='teacher.edit_class_settings' data-classroom-id=classroom.id data-event-action="Teachers Classes Edit Class Started")
        a.archive-classroom.text-h6(data-i18n='teacher.archive_class' data-classroom-id=classroom.id data-event-action="Teachers Classes Archive Class")

    .flex-right
      .progress-col
        if classroom.get('members').length == 0
          +addStudentsButton(classroom)
        else
          - var courses = classroom.getSortedCourses().map(function(c) { return view.courses.get(c._id); });
          - var courseLabelsArray = view.helper.courseLabelsArray(courses);
          each trimCourse, index in classroom.getSortedCourses() || []
            - var course = view.courses.get(trimCourse._id);
            - var label = courseLabelsArray[index];
            +progressDot(classroom, course, label)
      .view-class-arrow
        a.view-class-arrow-inner.glyphicon.glyphicon-chevron-right.view-class-btn(data-classroom-id=classroom.id data-event-action="Teachers Classes View Class Chevron")


mixin addStudentsButton(classroom)
  .add-students
    .text-center
      div.small-details(data-i18n='teacher.no_students_yet_view_class')

mixin createClassButton
  .create-class
    .text-center
      a.create-classroom-btn.btn.btn-lg.btn-primary(data-i18n='teacher.create_new_class')

mixin progressDot(classroom, course, label)
  //- TODO: inefficient. Cache this in the view?
  - courseInstance = view.courseInstances.findWhere({ courseID: course.id, classroomID: classroom.id })
  - var total = classroom.get('members').length
  - var complete = 0;
  - var dotClass = '';
  - var started = 0;
  if courseInstance && !_.isEmpty(courseInstance.get('members'))
    - complete = courseInstance.numCompleted
    - started = courseInstance.started
    - percentLevelCompletion = courseInstance.percentLevelCompletion
    - dotClass = complete === total ? 'forest' : started ? 'gold' : '';
    - var progressDotContext = {total: total, complete: complete, loading: !courseInstance.sessionsLoaded, percentLevelCompletion: percentLevelCompletion};
    .progress-dot(class=dotClass, data-title=view.progressDotTemplate(progressDotContext))
      +progressDotLabel(label)

mixin progressDotLabel(label)
  .dot-label.text-h6= label

mixin archivedClassRow(classroom)
  .class.row
    .col-xs-10(dir="auto")
      span
        = classroom.get('name')
    .col-xs-2
      .class-links.pull-right(dir="auto")
        a.unarchive-classroom.text-h6(data-i18n='teacher.unarchive_class' data-classroom-id=classroom.id)

mixin teacher-quests
  - var lastComplete = null;
  - var nextIncomplete = null;
  - var numComplete = 0;
  - var totalQuests = 0;
  each quest in view.teacherQuestData
    - totalQuests++;
    if quest.complete
      - lastComplete = quest;
      - numComplete++;
    else if !nextIncomplete
      - nextIncomplete = quest;
  if lastComplete
    - lastComplete.lastComplete = true;
  if nextIncomplete
    - nextIncomplete.nextIncomplete = true;
  - var percentComplete = totalQuests ? Math.round(numComplete * 100.0 / totalQuests) : 0;
  if view.prepaids.length < 1 && me.canManageLicensesViaUI()
    .teacher-quests
      .row
        .col-sm-3.quests-summary-col
          .quest-progress.center #{percentComplete}%
          .center
            if numComplete != totalQuests
              .el
                - var height = 100;
                svg(width=height, height=height)
                  - var radius = height / 2;
                  - var fullCircleStroke = 2*Math.PI*radius / 2
                  circle.bottom(r=radius,cx=radius,cy=radius)
                  circle.top(r=radius / 2,cx=radius,cy=radius,style="stroke-dasharray: #{fullCircleStroke/100*percentComplete} #{fullCircleStroke}")
          .center.completion-label(data-i18n="teacher.quests_complete")
        .col-sm-9.quests-list-col
          if numComplete != totalQuests
            h3(data-i18n="teacher.teacher_quest")
            strong.center!= view.translateWithMarkdown('teacher.teacher_quest_keep_going')
          else
            br
            strong.center!= view.translateWithMarkdown('teacher.teacher_quest_done')
          ul
            each quest in view.teacherQuestData
              if quest.complete
                if quest.lastComplete && numComplete != totalQuests
                  li.quest.quest-complete
                    +teacherQuest(quest,true)
                else
                  li.quest.quest-complete.hide
                    +teacherQuest(quest,true)
              else
                if quest.nextIncomplete
                  li.quest.quest-incomplete
                    +teacherQuest(quest,false)
                else
                  li.quest.quest-incomplete.hide
                    +teacherQuest(quest,false)
          .div
            span(data-i18n="teacher.refresh_to_update").refresh-help
            a.see-all-quests.btn.btn-primary.btn-small.pull-right(data-i18n="teacher.teacher_quest_more")
            a.see-less-quests.btn.btn-small.btn-primary.pull-right(data-i18n="teacher.teacher_quest_less" style="display: none")

mixin teacherQuest(quest,check)
  div.quest-title
    if check
      span.glyphicon.glyphicon-check
    else
      span.glyphicon.glyphicon-unchecked
    span !{quest.title}
  //[!{Math.floor(quest.best*100)}%]
  if (quest.steps || []).length > 0
    ul
      each step in quest.steps || []
        li
          if check
            span.glyphicon.glyphicon-check
          else
            span.glyphicon.glyphicon-unchecked
          span !{step}

